{
  "openapi": "3.0.0",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    }
  ],
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "firstName", "lastName"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "StrongPass123!"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Registration successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "550e8400-e29b-41d4-a716-446655440000"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "example": "user@example.com"
                            },
                            "firstName": {
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "role": {
                              "type": "string",
                              "enum": ["USER", "ADMIN", "SUPER_ADMIN"],
                              "example": "USER"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email already exists or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exists"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "EMAIL_EXISTS"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/check-user": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check if user exists",
        "description": "Check if a user exists by email or mobile number. Returns whether the user exists and if they are a new user (no password set).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "mobileNumber": {
                    "type": "string",
                    "description": "User's mobile number (digits only, 6-15 characters)",
                    "pattern": "^\\d+$",
                    "minLength": 6,
                    "maxLength": 15,
                    "example": "1234567890"
                  }
                },
                "anyOf": [
                  {
                    "required": ["email"]
                  },
                  {
                    "required": ["mobileNumber"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User check completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User exists"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "isUserExists": {
                          "type": "boolean",
                          "description": "Whether the user exists in the system",
                          "example": true
                        },
                        "isNewUser": {
                          "type": "boolean",
                          "description": "Whether the user is new (no password set)",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Either email or mobile number is required"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_ERROR"
                        },
                        "details": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "example": "Invalid email format"
                            },
                            "mobileNumber": {
                              "type": "string",
                              "example": "Mobile number must contain only digits"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login to the application using email or mobile number",
        "description": "Authenticate user with either email or mobile number along with password. At least one of email or mobile number must be provided.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address (either email or mobileNumber is required)",
                    "example": "user@example.com"
                  },
                  "mobileNumber": {
                    "type": "string",
                    "description": "User's mobile number (either email or mobileNumber is required)",
                    "minLength": 6,
                    "maxLength": 15,
                    "pattern": "^\\d+$",
                    "example": "1234567890"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password (minimum 8 characters)",
                    "minLength": 8,
                    "example": "YourPassword123!"
                  }
                },
                "anyOf": [
                  {
                    "required": ["email", "password"]
                  },
                  {
                    "required": ["mobileNumber", "password"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "550e8400-e29b-41d4-a716-446655440000"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "example": "user@example.com"
                            },
                            "firstName": {
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "role": {
                              "type": "string",
                              "enum": ["USER", "ADMIN", "SUPER_ADMIN"],
                              "example": "USER"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "INVALID_CREDENTIALS"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation error"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_ERROR"
                        },
                        "details": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "example": "Invalid email format"
                            },
                            "mobileNumber": {
                              "type": "string",
                              "example": "Mobile number must contain only digits"
                            },
                            "password": {
                              "type": "string",
                              "example": "Password must be at least 8 characters"
                            },
                            "email_mobileNumber": {
                              "type": "string",
                              "example": "Either email or mobile number is required"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Request password reset OTP",
        "description": "Sends a 6-digit OTP to the user's email for password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP sent successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "550e8400-e29b-41d4-a716-446655440000"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "example": "user@example.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "USER_NOT_FOUND"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
